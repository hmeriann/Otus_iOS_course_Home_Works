//
//  ViewController.swift
//  2_15_Stopwatch
//
//  Created by Zuleykha Pavlichenkova on 05.11.2022.
//
//–î–æ–±–∞–≤–∏—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ UIViewController –Ω–∞ —Å—Ç–æ—Ä–∏–±–æ—Ä–¥ –∏ —Å–≤—è–∑–∞—Ç—å —Å –∫–ª–∞—Å—Å–æ–º
//–ù–∞ UIViewController –¥–æ–±–∞–≤–∏—Ç—å –Ω–∞–¥–ø–∏—Å—å —Å —Ç–µ–∫—Å—Ç–æ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é "00:00" –∏ 2 –∫–Ω–æ–ø–∫–∏ "–°—Ç–∞—Ä—Ç" –∏ "–°—Ç–æ–ø". –í–µ—Ä—Å—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω–æ–π –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Autolayout.
//–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å Timer –Ω–∞ RunLoop –¥–ª—è –≤—ã–∑–æ–≤–∞ —Å–æ–±—ã—Ç–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –Ω–∞–¥–ø–∏—Å–∏ —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É –∏ –≤—ã–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–µ–∫—É–Ω–¥ –≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ.
//–ü–æ –∫–Ω–æ–ø–∫–∞–º "–°—Ç–∞—Ä—Ç" –∏ "–°—Ç–æ–ø" –Ω—É–∂–Ω–æ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ç–∞–π–º–µ—Ä–æ–º. –ü–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —Å—Ç–∞—Ä—Ç–∞ —Å—á–µ—Ç –∏–¥–µ—Ç —Å —Ç–æ–≥–æ –∂–µ –º–µ—Å—Ç–∞. –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫—É "–°—Ç–∞—Ä—Ç" –∏–ª–∏ "–°—Ç–æ–ø" –Ω—É–∂–Ω–æ –¥–∏–∑–µ–π–±–ª–∏—Ç—å
//–ü—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å
///when your app enters the background, iOS pauses any running timers. And when the app enters the foreground again, iOS resumes the timers.
//–ü—Ä–∏ —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏ —Ç–∞–π–º–µ—Ä –∏ —Å—á–µ—Ç –Ω—É–∂–Ω–æ –ø—É—Å–∫–∞—Ç—å —Å —Ç–æ–≥–æ –∂–µ –º–µ—Å—Ç–∞, –µ—Å–ª–∏ –¥–æ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Ç–∞–π–º–µ—Ä —Ä–∞–±–æ—Ç–∞–ª.

import UIKit

class ViewController: UIViewController {

    // MARK: Outlets
    @IBOutlet weak var startButton: UIButton!
    @IBOutlet weak var stopButton: UIButton!
    @IBOutlet weak var timeLabel: UILabel!
    
    // MARK: Properties
    private var timer: Timer?
    private var value: Int = 0
    private var isTimerStarted: Bool = false
    private var isAppActive: Bool = true

    // MARK: Lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        updateState()
        let notificationCenter = NotificationCenter.default
        notificationCenter.addObserver(
            self,
            selector: #selector(appMovedToBackground),
            name: UIApplication.willResignActiveNotification, object: nil)
        notificationCenter.addObserver(
            self,
            selector: #selector(appMovedToActive),
            name: UIApplication.didBecomeActiveNotification, object: nil)
    }
    
    @objc func appMovedToBackground() {
        print("üò∂‚Äçüå´Ô∏è", #function)
        isAppActive = false
        updateState()
    }
    
    @objc func appMovedToActive() {
        print("‚ö†Ô∏è", #function)
        isAppActive = true
        updateState()
    }

    // MARK: Actions
    @IBAction func didTapStart(_ sender: Any) {
//        print(#function)
        isTimerStarted = true
        updateState()
    }
    
    @IBAction func didTapStop(_ sender: Any) {
//        print(#function)
        isTimerStarted = false
        updateState()
    }
    
    // MARK: Private
    
    private func updateState() {
        startButton.isEnabled = !isTimerStarted
        stopButton.isEnabled = isTimerStarted
        if isTimerStarted && isAppActive {
            startTimer()
        } else {
            stopTimer()
        }
    }
    
    private func startTimer() {
        timer?.invalidate()
        let timer = Timer(
            timeInterval: 1,
            target: self,
            selector: #selector(onTimer),
            userInfo: nil,
            repeats: true
        )
        self.timer = timer
        RunLoop.main.add(timer, forMode: .common)
    }
    
    @objc func onTimer() {
        value += 1
        let seconds = value % 60
        let secondsString = String(format: "%02d", seconds)
        let minutes = value / 60
        let minutesString = String(format: "%02d", minutes)
        
        timeLabel.text = "\(minutesString):\(secondsString)"
    }
    
    private func stopTimer() {
        timer?.invalidate()
    }
}


